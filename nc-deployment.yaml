apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.27.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: nc
  name: nc
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nc
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.27.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/dbnet: "true"
        io.kompose.network/redisnet: "true"
        io.kompose.service: nc
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: nc_db_name
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: nc_db_host
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-secret
                  key: nextcloud-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-secret
                  key: nextcloud-username
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: redis_db_host
          image: nextcloud:apache
          name: nc
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /var/www/html
              name: nc-data
      restartPolicy: Always
      volumes:
        - name: nc-data
          persistentVolumeClaim:
            claimName: nc-data
status: {}
